[build-system]
requires = ["setuptools>=41"]
build-backend = "setuptools.build_meta"

[project]
name = "{{package_name}}"
version = "0.0.1"
requires-python = ">=3.8,<4.0"
dependencies = [
    "fastapi>=0.100.0,<1.0",
    "pydantic_settings>=2.0.1,<3.0",
    "uvicorn[standard]>=0.20,<1.0",
    "starlette-prometheus>=0.9,<1.0",
    "numpy>=1.19",
    "dill==0.3.5.1",
    {%- if gabarit_package_spec %}
    "{{gabarit_package_spec}}",
    "dohq-artifactory>=0.8,<1.0",
    {%- endif %}
]

[tool.pdm.dev-dependencies]
dev = [
    "black>=19.0",
    "isort>=4.3",
    "pytest>=7.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=3.0",
    "ruff>=0.1.5",
    "mypy>=1.4.1",
    "httpx" # needed by fastapi
]

[tool.pdm]
[tool.pdm.scripts]
lint-code = "ruff check ."
format-code = "ruff format ."
test = "pytest --cov-report term-missing"
run = "./launch.sh"
build-d = "docker build -t {{package_name}} -f Dockerfile ."
run-d = "docker container run --rm -p 5000:5000 {{package_name}}"
run-d-it = "docker container run --rm -p 5000:5000 -i -t {{package_name}}"

[project.scripts]
download-model = "{{package_name}}.model:Model.download_model"

[tool.setuptools.packages.find]
include = ["{{package_name}}*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-v --cov={{package_name}}"
filterwarnings = [
    "ignore:The hookimpl CovPlugin.pytest_",
    "ignore:IPython could not be loaded!"
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".eggs",
    ".git",
    ".ruff_cache",
    ".venv",
    "__pypackages__",
    "build",
    "dist",
    "venv",
]

line-length = 120
# Same as Black.
indent-width = 4

# Assume Python 3.8
target-version = "py38"

[tool.ruff.lint]
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "C", # flake8-comprehensions
    "B", # flake8-bugbear
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long
    "B904", # raise from in except clause
]

[tool.ruff.per-file-ignores]
"tests/conftest.py" = ["E402"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
